@{
    ViewData["Title"] = "Submit Bloodwork";
}

<head>
    <link rel="stylesheet" href="~/css/SubmitBloodwork.css" asp-append-version="true" />
    <script src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js" defer data-deferred="1"></script>
    <style>
        .dropdown {
            position: absolute;
            top: 100px; 
            right: 05px; 
            z-index: 1000;
            padding: 15px; 
            background-color: #343A40;
            border-radius: 8px; 
            box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1); 
        }

        .dropdown-toggle {
            background-color: #007bff; 
            color: white;
            padding: 10px 20px; 
            border-radius:  5px; 
            border: none;
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #343A40;
            border: 1px solid #ccc;
            padding: 10px;
            box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);
            z-index: 1;
            width: 150px;
            border-radius: 5px;
        }

            .dropdown-content label {
                display: block;
                margin-bottom: 10px; 
                font-size: 14px; 
                color: white; 
            }

        .show {
            display: block; 
        }

    </style>
</head>

<div id="particles-js"></div>

<div>
    <div class="container">

        <h2>Happy @DateTime.Today.DayOfWeek</h2>
        <h3>Bloodwork for @DateTime.Today</h3>

        <div class="dropdown" id="dropdownMenu">
            <label class="dropdown-label">Would you like us to notify you when</label>
            <div></div>
            <label class="dropdown-label"> it's time to upload your bloodwork?</label>
            <div></div>
            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownButton" onclick="toggleDropdown()">
                Select Reminders:
            </button>
            <div class="dropdown-content" id="dropdownContent">
                <label><input type="checkbox" id="daily-checkbox"> Daily</label><br>
                <label><input type="checkbox" id="weekly-checkbox"> Weekly</label><br>
                <label><input type="checkbox" id="monthly-checkbox"> Monthly</label><br>
                <label><input type="checkbox" id="yearly-checkbox"> Yearly</label><br>
                <button class="btn btn-primary" id="saveChangesButton">Save Changes</button>
            </div>
        </div>

        <div class="chat-container">
            <div id="chatOutput" class="output"></div>
            <form id="promptForm" class="input-form">
                <textarea id="promptInput" placeholder="Ask a Question..." required></textarea>
                <button type="submit" id="sendButton" class="btn btn-primary">
                    <span class="spinner-border spinner-border-sm" aria-hidden="true" style="display: none;" id="spinner"></span>
                    <span id="buttonText">Send</span>
                </button>
            </form>
        </div>

        <div id="InputSelection" class="upload-or-manual-container">
            <h4>Will you be manually inputting test, or uploading a PDF today?</h4>
            <div>
                <button id="input-bloodwork-btn" onclick="displayInput()" class="btn btn-primary">
                    Manually inputting
                </button>
                <button id="upload-bloodwork-btn" onclick="displayUploadPDF()" class="btn btn-primary">
                    Submitting PDF
                </button>
            </div>
        </div>

        <form id="uploadForm" enctype="multipart/form-data">
            <h2>Upload Bloodwork</h2>
            <div class="form-group">
                <label for="pdfFile">Select PDF file:</label>
                <input type="file" id="pdfFile" name="pdfFile" accept="application/pdf" class="form-control">
            </div>
            <button type="submit" id="sendButton" class="btn btn-primary">
                <span class="spinner-border spinner-border-sm" aria-hidden="true" style="display: none;" id="spinner"></span>
                <span id="buttonText">Submit</span>
            </button>
        </form>

        <div id="inputForm">
            <div class="col-sm-3">
                <label>Date of Bloodwork Test</label>
                <div class="input-group">
                    <div class="input-group-text"></div>
                    <input type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")"
                           class="form-control"
                           id="submissionDate"
                           placeholder="Date of Test" />
                </div>
            </div>
            <div id="testCount"></div>
            <form id="listOfTestResults" onsubmit="SubmitResults(); return false;">
                <table id="results-table" class="table">
                    <thead>
                        <tr>
                            <th>TestName</th>
                            <th>Result</th>
                            <th>Grade</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @* Test results go here *@
                    </tbody>
                </table>

                <button type="button" id="add-row" class="btn btn-primary blood-work-add-btn">Add Test</button>
                <br /><br />
                <button type="submit" class="btn btn-success blood-work-submit-btn">Submit Results</button>
            </form>
        </div>
    </div>
</div>

<script>
    function toggleDropdown() {
        const dropdownContent = document.getElementById('dropdownContent');
        dropdownContent.classList.toggle('show');
    }

    // Close the dropdown if the user clicks outside of it
    window.onclick = function (event) {
        if (!event.target.closest('.dropdown-content') && !event.target.closest('.dropdown-toggle')) {
            document.getElementById('dropdownContent').classList.remove('show');
        }
    }

    document.getElementById('saveChangesButton').addEventListener('click', function () {

        const daily = document.getElementById('daily-checkbox').checked;
        const weekly = document.getElementById('weekly-checkbox').checked;
        const monthly = document.getElementById('monthly-checkbox').checked;
        const yearly = document.getElementById('yearly-checkbox').checked;

        const data = {
            Daily: daily,
            Weekly: weekly,
            Monthly: monthly,
            Yearly: yearly 
        };

        fetch('/api/SubmitBloodwork/SaveReminders', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        }).then(response => response.json())
            .then(result => {
                alert(result.message || 'Reminders saved!');
            }).catch(error => {
                console.error('Error:', error);
            });

        // Save the state to local storage
        const checkboxes = document.querySelectorAll('.dropdown-content input[type="checkbox"]');
        checkboxes.forEach((checkbox, index) => {
            localStorage.setItem(`checkbox-${index}`, checkbox.checked);
        });
    });


    // Load saved checkbox states when the page loads
    document.addEventListener("DOMContentLoaded", function () {
        const checkboxes = document.querySelectorAll('.dropdown-content input[type="checkbox"]');

        // Reset checkboxes
        checkboxes.forEach((checkbox, index) => {
            checkbox.checked = false;
        });

        // Load saved state from local storage after resetting the checkboxes
        checkboxes.forEach((checkbox, index) => {
            const isChecked = localStorage.getItem(`checkbox-${index}`) === 'true';
            if (isChecked) {
                checkbox.checked = true;
            }
        });
    });


    function displayUploadPDF() {
        const pdfForm = document.getElementById('uploadForm');
        hideInputSelection();
        pdfForm.style.display = 'block';
    }

    function hideInputSelection() {
        const inputSelection = document.getElementById('InputSelection');
        inputSelection.style.display = 'none';
    }

    function hideUploadPDF() {
        const pdfForm = document.getElementById('uploadForm');
        pdfForm.style.display = 'none';
    }

    function displayInput() {
        const inputForm = document.getElementById('inputForm');
        hideInputSelection();
        inputForm.style.display = 'block';
    }

    $(document).ready(function () {
        const pdfForm = document.getElementById('uploadForm');
        pdfForm.style.display = 'none';

        const inputForm = document.getElementById('inputForm');
        inputForm.style.display = 'none';

        const userChatForm = document.getElementById('promptForm');
        userChatForm.style.display = 'none';

        const outputField = document.getElementById('chatOutput');
        outputField.style.display = 'none';

        $('#uploadForm').submit(function (e) {
            e.preventDefault();

            outputField.style.display = 'block';
            var formData = new FormData();
            var fileInput = $('#pdfFile')[0].files[0];

            if (fileInput === undefined) {
                $('#chatOutput').html('<p>No File Provided. Please try again.</p>');
                return;
            }

            $('#chatOutput').html('<p>Reading file...</p>');

            formData.append('pdfFile', fileInput);

            const spinner = document.getElementById('spinner');
            const buttonText = document.getElementById('buttonText');
            const sendButton = document.getElementById('sendButton');

            spinner.style.display = 'inline-block';
            spinner.style.color = 'darkgoldenrod';

            sendButton.style.backgroundColor = 'goldenrod';
            buttonText.textContent = 'Loading...';
            sendButton.disabled = true;

            const inputForm = document.getElementById('inputForm');
            inputForm.style.display = 'block';
            $.ajax({
                url: '@Url.Action("UploadPdf", "SubmitBloodwork")',
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    if (response.success) {
                        $('#chatOutput').html('<p>File uploaded successfully!</p>');
                        hideUploadPDF();
                        $('#results-table tbody').empty();

                        var testCount = 0;
                        response.content.forEach(function (testResult, index) {
                            var newRow = `<tr>
                                                <td><input type="text" name="TestResults[${index}].TestName" value="${testResult.TestName}" class="form-control test-name" placeholder="Test Name" /></td>
                                                <td><input type="text" name="TestResults[${index}].Result" value="${testResult.Result}" class="form-control test-result" placeholder="Test Result" /></td>
                                                <td><input type="text" name="TestResults[${index}].Grade" value="${testResult.Grade}" class="form-control test-grade" placeholder="Test Grade (L, M, H)" /></td>
                                            <td><button type="button" class="btn btn-danger remove-row">X</button></td>
                                          </tr>`;
                            $('#results-table tbody').append(newRow);
                            testCount++;
                        });
                        $('#testCount').html(`<p>Number of results: ${testCount}</p>`);
                    } else {
                        $('#chatOutput').html('<p>Error: ' + response.message + '</p>');
                    }
                }
                ,
                error: function (xhr, status, error) {
                    $('#chatOutput').html('<p>Error uploading file: ' + error + '</p>');
                }
            });
        });
    });

    function resetUI() {
        const inputField = document.getElementById('promptInput');

        const buttonText = document.getElementById('buttonText');
        const sendButton = document.getElementById('sendButton');

        spinner.style.display = 'none';
        buttonText.textContent = 'Submit';
        sendButton.disabled = false;
        sendButton.style.backgroundColor = 'gold';
    }

    function displayUserChat() {
        const userChatForm = document.getElementById('promptForm');
        userChatForm.style.display = 'flex';

        const pdfForm = document.getElementById('uploadForm');
        pdfForm.style.display = 'none';
    }

    $(document).ready(function () {
        $('#add-row').click(function () {
            var rowCount = $('#results-table tbody tr').length;

            var newRow = `<tr>
                                            <td><input type="text" name="TestResults[${rowCount}].TestName" class="form-control" /></td>
                                            <td><input type="text" name="TestResults[${rowCount}].Result" class="form-control" /></td>
                                            <td><input type="text" name="TestResults[${rowCount}].Grade" class="form-control" /></td>
                                            <td><button type="button" class="btn btn-danger remove-row">X</button></td>
                                            </tr>`;
            $('#results-table tbody').append(newRow);
            $('#testCount').html(`<p>Number of results: ${rowCount + 1}</p>`);
        });

        $(document).on('click', '.remove-row', function () {
            $(this).closest('tr').remove();
        });
    });

    function SubmitResults() {
        var testResults = [];
        $('#results-table tbody tr').each(function () {
            var testName = $(this).find('.test-name').val();
            var testResult = $(this).find('.test-result').val();
            var testGrade = $(this).find('.test-grade').val() || "M";

            if (testName && testResult && testGrade) {
                testResults.push({
                    TestName: testName,
                    Result: testResult,
                    Grade: testGrade
                });
            }
        });

        var submissionDate = $('#submissionDate').val();

        const minDate = new Date("2000-01-01");

        if (submissionDate < minDate) {
            alert("Date must be after January 1, 2000.");
            return;
        }

        var data = {
            submissionDate: submissionDate,
            tests: testResults
        };

        $.ajax({
            url: '@Url.Action("SubmitResults", "SubmitBloodwork")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(data),
            success: function (response) {
                alert('Results submitted successfully!');
                window.location.reload();
            },
            error: function (xhr, status, error) {
                console.error('Error submitting results:', error);
            }
        });
    }
</script>
<script>
    function resetParticles() {
        document.getElementById('particles-js').innerHTML = ''; // Clear the content
        particles(); // Reinitialize the particle system
    }

    window.addEventListener('DOMContentLoaded', (event) => {
        particlesJS("particles-js", {
            "particles": {
                "number": {
                    "value": 200,
                    "density": {
                        "enable": true,
                        "value_area": 800
                    }
                },
                "color": {
                    "value": "#ffffff"
                },
                "shape": {
                    "type": "circle",
                    "stroke": {
                        "width": 0,
                        "color": "#000000"
                    },
                    "polygon": {
                        "nb_sides": 5
                    },
                    "image": {
                        "src": "img/github.svg",
                        "width": 100,
                        "height": 100
                    }
                },
                "opacity": {
                    "value": 0.5,
                    "random": false,
                    "anim": {
                        "enable": false,
                        "speed": 1,
                        "opacity_min": 0.1,
                        "sync": false
                    }
                },
                "size": {
                    "value": 3,
                    "random": true,
                    "anim": {
                        "enable": false,
                        "speed": 40,
                        "size_min": 0.1,
                        "sync": false
                    }
                },
                "line_linked": {
                    "enable": true,
                    "distance": 150,
                    "color": "#ffffff",
                    "opacity": 0.4,
                    "width": 1
                },
                "move": {
                    "enable": true,
                    "speed": 6,
                    "direction": "none",
                    "random": false,
                    "straight": false,
                    "out_mode": "out",
                    "bounce": false,
                    "attract": {
                        "enable": false,
                        "rotateX": 600,
                        "rotateY": 1200
                    }
                }
            },
            "interactivity": {
                "detect_on": "canvas",
                "events": {
                    "onhover": {
                        "enable": true,
                        "mode": "grab"
                    },
                    "onclick": {
                        "enable": true,
                        "mode": "push"
                    },
                    "resize": true
                },
                "modes": {
                    "grab": {
                        "distance": 140,
                        "line_linked": {
                            "opacity": 1
                        }
                    },
                    "bubble": {
                        "distance": 400,
                        "size": 40,
                        "duration": 2,
                        "opacity": 8,
                        "speed": 3
                    },
                    "repulse": {
                        "distance": 200,
                        "duration": 0.4
                    },
                    "push": {
                        "particles_nb": 4
                    },
                    "remove": {
                        "particles_nb": 2
                    }
                }
            },
            "retina_detect": true
        });
    });
</script>
